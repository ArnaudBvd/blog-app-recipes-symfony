<?php

namespace ContainerFAnxulb;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_UxIcons_Command_ImportService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.ux_icons.command.import' shared service.
     *
     * @return \Symfony\UX\Icons\Command\ImportIconCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'console'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'Command.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'ux-icons'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'ImportIconCommand.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'ux-icons'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'IconRegistryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'ux-icons'.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Registry'.\DIRECTORY_SEPARATOR.'LocalSvgIconRegistry.php';

        $container->privates['.ux_icons.command.import'] = $instance = new \Symfony\UX\Icons\Command\ImportIconCommand(($container->privates['.ux_icons.iconify'] ?? $container->load('get_UxIcons_IconifyService')), ($container->privates['.ux_icons.local_svg_icon_registry'] ??= new \Symfony\UX\Icons\Registry\LocalSvgIconRegistry((\dirname(__DIR__, 4).'/assets/icons'), [])));

        $instance->setName('ux:icons:import');
        $instance->setDescription('Import icon(s) from iconify.design');

        return $instance;
    }
}
